@startuml

title __STARS's Class Diagram__\n

  namespace stars {
    class stars.AdminController {
        + AdminController()
        + addStudent()
        + dropIndex()
        + getCourseList()
        + getStudentList()
    }
  }
  

  namespace stars {
    class stars.AdminUI {
        - formatter : DateTimeFormatter
        + AdminUI()
        + displayMenu()
        - addStudent()
        - editCourseInformation()
        - editStudentAccess()
    }
  }
  

  namespace stars {
    class stars.Course {
        - au : int
        - courseID : String
        - courseName : String
        - indexList : ArrayList<Index>
        - school : String
        + Course()
        + addIndex()
        + getAu()
        + getCourseID()
        + getCourseName()
        + getIndexList()
        + getSchool()
        + print()
        + setAu()
        + setCourseID()
        + setCourseName()
        + setIndexList()
        + setSchool()
    }
  }
  

  namespace stars {
    class stars.CourseDB {
        - courseList : ArrayList<Course>
        + add()
        + getCourseList()
        + loadInformation()
        + saveInformation()
    }
  }
  

  namespace stars {
    interface stars.Database {
        {abstract} + loadInformation()
        {abstract} + saveInformation()
    }
  }
  

  namespace stars {
    class stars.Index {
        - confirmedList : ArrayList<Student>
        - indexNumber : int
        - timings : ArrayList<Timing>
        - vacancy : int
        - vacancyLimit : int
        - waitList : ArrayList<Student>
        + Index()
        + addStudent()
        + dropStudent()
        + getConfirmedList()
        + getCourse()
        + getIndexNumber()
        + getTimings()
        + getVacancy()
        + getWaitList()
        + print()
        + setConfirmedList()
        + setCourse()
        + setIndexNumber()
        + setTimings()
        + setVacancy()
        + setWaitList()
        + swopStudent()
    }
  }
  

  namespace stars {
    class stars.LoginController {
        - ADMIN_ACCOUNT_FILE : String
        - STUDENT_ACCOUNTS_FILE : String
        + addStudent()
        + checkStudent()
        + editAccess()
        + verifyLogin()
        - checkAdmin()
    }
  }
  

  namespace stars {
    class stars.LoginUI {
        {static} + main()
    }
  }
  

  namespace stars {
    class stars.RegisteredCourses {
    }
  }
  

  namespace stars {
    abstract class stars.SelectUI {
        {abstract} + displayMenu()
        + select()
    }
  }
  

  namespace stars {
    interface stars.Selectable {
        {abstract} + print()
    }
  }
  

  namespace stars {
    class stars.Student {
        - degree : String
        - gender : String
        - nationality : String
        - studentID : String
        - studentName : String
        + Student()
        + addIndex()
        + changeIndex()
        + checkChangeIndex()
        + dropIndex()
        + getDegree()
        + getGender()
        + getNationality()
        + getRegisteredIndex()
        + getStudentID()
        + getStudentName()
        + print()
        + swopPlaces()
    }
  }
  

  namespace stars {
    class stars.StudentController {
        + StudentController()
        + addIndex()
        + changeIndex()
        + dropIndex()
        + getCourseList()
        + getRegisteredIndex()
        + swopIndex()
    }
  }
  

  namespace stars {
    class stars.StudentDB {
        - studentList : List<Student>
        + addStudent()
        + getStudentList()
        + loadInformation()
        + saveInformation()
    }
  }
  

  namespace stars {
    class stars.StudentRegisteredCourses {
        ~ confirmedIndexArray : ArrayList<Index>
        ~ waitlistedIndexArray : ArrayList<Index>
        + StudentRegisteredCourses()
        + addIndex()
        + changeIndex()
        + checkChangeIndex()
        + dropIndex()
        + getConfirmedIndexArray()
        + getIndexList()
        + getWaitlistedIndexArray()
        + swopPlaces()
        - checkClash()
    }
  }
  

  namespace stars {
    class stars.StudentUI {
        + StudentUI()
        + displayMenu()
        - addIndex()
        - changeIndex()
        - checkVacanciesAvailable()
        - dropIndex()
        - printRegisteredCourses()
        - swopIndex()
    }
  }
  

  namespace stars {
    class stars.Timing {
        - end : LocalTime
        - start : LocalTime
        + Timing()
        + checkOverlap()
        + getEnd()
        + getStart()
        + setEnd()
        + setStart()
    }
  }
  

  namespace stars {
    enum Day {
      FRI
      MON
      THU
      TUE
      WED
    }
  }
  

  namespace stars {
    enum Type {
      LAB
      LEC
      TUT
    }
  }
  

  stars.AdminController o-- stars.CourseDB : courseInfo
  stars.AdminController o-- stars.StudentDB : studentInfo
  stars.AdminUI -up-|> stars.SelectUI
  stars.AdminUI o-- stars.AdminController : adminController
  stars.AdminUI o-- stars.LoginController : loginController
  stars.Course .up.|> stars.Selectable
  stars.CourseDB .up.|> stars.Database
  stars.Index .up.|> stars.Selectable
  stars.Index o-- stars.Course : course
  stars.Student .up.|> stars.Selectable
  stars.Student o-- stars.StudentRegisteredCourses : registeredCourses
  stars.StudentController o-- stars.CourseDB : courseInfo
  stars.StudentController o-- stars.Student : myStudent
  stars.StudentController o-- stars.StudentDB : studentInfo
  stars.StudentDB .up.|> stars.Database
  stars.StudentRegisteredCourses o-- stars.Student : owner
  stars.StudentUI -up-|> stars.SelectUI
  stars.StudentUI o-- stars.StudentController : studentController
  stars.Timing o-- stars.Timing.Day : day
  stars.Timing o-- stars.Timing.Type : type
  stars.Timing +-down- stars.Timing.Day
  stars.Timing +-down- stars.Timing.Type


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
