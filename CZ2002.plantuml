@startuml

title __CZ2002's Class Diagram__\n
  namespace stars.boundary {
    namespace admin {
      class stars.boundary.admin.AddCourseUI {
          + addCourse()
      }
    }
  }


  namespace stars.boundary {
    namespace admin {
      class stars.boundary.admin.AddIndexUI {
          + addIndex()
      }
    }
  }


  namespace stars.boundary {
    namespace admin {
      class stars.boundary.admin.AddStudentUI {
          + addStudent()
      }
    }
  }


  namespace stars.boundary {
    namespace admin {
      class stars.boundary.admin.CheckVacancyUI {
          + checkVacancy()
      }
    }
  }


  namespace stars.boundary {
    namespace admin {
      class stars.boundary.admin.EditCourseInformationUI {
          + editCourseInformation()
      }
    }
  }


  namespace stars.boundary {
    namespace admin {
      class stars.boundary.admin.EditStudentAccessUI {
          + editStudentAccess()
      }
    }
  }


  namespace stars.boundary {
    namespace admin {
      class stars.boundary.admin.PrintStudentListByCourseUI {
          + printStudentListByCourse()
      }
    }
  }


  namespace stars.boundary {
    namespace admin {
      class stars.boundary.admin.PrintStudentListByIndexUI {
          + printStudentListByIndex()
      }
    }
  }


  stars.boundary.admin.AddCourseUI -up-|> stars.boundary.SelectUI
  stars.boundary.admin.CheckVacancyUI -up-|> stars.boundary.SelectUI
  stars.boundary.admin.EditCourseInformationUI -up-|> stars.boundary.SelectUI
  stars.boundary.admin.EditStudentAccessUI -up-|> stars.boundary.SelectUI
  stars.boundary.admin.PrintStudentListByCourseUI -up-|> stars.boundary.SelectUI
  stars.boundary.admin.PrintStudentListByIndexUI -up-|> stars.boundary.SelectUI

  namespace stars.boundary {
      namespace student {
        class stars.boundary.student.AddIndexUI {
            + addIndex()
        }
      }
    }


    namespace stars.boundary {
      namespace student {
        class stars.boundary.student.ChangeIndexUI {
            + changeIndex()
        }
      }
    }


    namespace stars.boundary {
      namespace student {
        class stars.boundary.student.CheckVacanciesAvailableUI {
            + checkVacanciesAvailable()
        }
      }
    }


    namespace stars.boundary {
      namespace student {
        class stars.boundary.student.DropIndexUI {
            + dropIndex()
        }
      }
    }


    namespace stars.boundary {
      namespace student {
        class stars.boundary.student.PrintRegisteredCoursesUI {
            + printRegisteredCourses()
        }
      }
    }


    namespace stars.boundary {
      namespace student {
        class stars.boundary.student.SwopIndexUI {
            + swopIndex()
        }
      }
    }


    stars.boundary.student.AddIndexUI -up-|> stars.boundary.SelectUI
    stars.boundary.student.ChangeIndexUI -up-|> stars.boundary.SelectUI
    stars.boundary.student.CheckVacanciesAvailableUI -up-|> stars.boundary.SelectUI
    stars.boundary.student.DropIndexUI -up-|> stars.boundary.SelectUI
    stars.boundary.student.SwopIndexUI -up-|> stars.boundary.SelectUI

  namespace stars.boundary {
      class stars.boundary.AdminUI {
          - dateFormatter : DateTimeFormatter
          - timeFormatter : DateTimeFormatter
          + AdminUI()
          + displayMenu()
          - getallcourses()
          - getallstudents()
      }
    }


    namespace stars.boundary {
      class stars.boundary.IndexTimingDisplayer {
          - HEIGHT : int
          - WIDTH : int
          + IndexTimingDisplayer()
          + displayTimetable()
          + pad()
      }
    }


    namespace stars.boundary {
      class stars.boundary.IntScanner {
          {static} + nextInt()
      }
    }


    namespace stars.boundary {
      class stars.boundary.LoginUI {
          {static} + main()
          {static} - login()
      }
    }


    namespace stars.boundary {
      class stars.boundary.PrintIndexTimetableUI {
          + printIndexTimetable()
      }
    }


    namespace stars.boundary {
      abstract class stars.boundary.SelectUI {
          + select()
      }
    }


    namespace stars.boundary {
      class stars.boundary.StudentUI {
          + StudentUI()
          + displayMenu()
      }
    }


    namespace stars.boundary {
      class stars.boundary.TimetableDisplayer {
          - HEIGHT : int
          - WIDTH : int
          + TimetableDisplayer()
          + displayTimetable()
          + pad()
      }
    }


    stars.boundary.AdminUI -up-|> stars.boundary.SelectUI
    stars.boundary.AdminUI o-- stars.controller.AdminController : adminController
    stars.boundary.IndexTimingDisplayer o-- stars.entity.Index : index
    stars.boundary.PrintIndexTimetableUI -up-|> stars.boundary.SelectUI
    stars.boundary.StudentUI -up-|> stars.boundary.SelectUI
    stars.boundary.StudentUI o-- stars.controller.StudentController : studentController
    stars.boundary.TimetableDisplayer o-- stars.entity.Student : student

namespace stars.controller {
    class stars.controller.AdminController {
        + AdminController()
        + addCourse()
        + addIndex()
        + addStudent()
        + addTiming()
        + changeIndexID()
        + createCourse()
        + createIndex()
        + createTiming()
        + dropIndex()
        + editAccess()
        + getCourseList()
        + getStudentList()
        + save()
        + setCourseID()
        + setVacancyLimit()
    }
  }


  namespace stars.controller {
    interface stars.controller.Authenticator {
        {abstract} + authenticate()
    }
  }


  namespace stars.controller {
    class stars.controller.DatabaseManager {
        - DATABASE_FILE : String
        + DatabaseManager()
        + addCourse()
        + addStudent()
        + findStudent()
        + getCoursesArray()
        + getStudentArray()
        + saveInformation()
        - loadInformation()
    }
  }


  namespace stars.controller {
    class stars.controller.FlatFileAdminAuthenticator {
        - ADMIN_ACCOUNT_FILE : String
        + authenticate()
    }
  }


  namespace stars.controller {
    class stars.controller.FlatFileStudentAuthenticator {
        - STUDENT_ACCOUNTS_FILE : String
        + addStudent()
        + authenticate()
        + editAccess()
    }
  }


  namespace stars.controller {
    class stars.controller.IndexStudentAdder {
        + addStudent()
    }
  }


  namespace stars.controller {
    class stars.controller.IndexStudentDropper {
        + dropStudent()
    }
  }


  namespace stars.controller {
    class stars.controller.IndexStudentSwopper {
        + swopStudent()
    }
  }


  namespace stars.controller {
    class stars.controller.LoginController {
        + verifyLogin()
    }
  }


  namespace stars.controller {
    class stars.controller.SetVacancyLimitController {
        + setVacancyLimit()
    }
  }


  namespace stars.controller {
    interface stars.controller.StudentAuthenticator {
        {abstract} + addStudent()
        {abstract} + editAccess()
    }
  }


  namespace stars.controller {
    class stars.controller.StudentController {
        + StudentController()
        + addIndex()
        + changeIndex()
        + displayTimetable()
        + dropIndex()
        + getConfirmedIndex()
        + getCourseList()
        + getRegisteredIndex()
        + getWaitlistedIndex()
        + save()
        + swopIndex()
    }
  }


  namespace stars.controller {
    class stars.controller.TimetableClashChecker {
        + checkClash()
        + checkClash()
    }
  }


  namespace stars.controller {
    interface stars.controller.UserControllerInterface {
        {abstract} + getCourseList()
    }
  }


  stars.controller.AdminController .up.|> stars.controller.UserControllerInterface
  stars.controller.AdminController o-- stars.controller.DatabaseManager : dbManager
  stars.controller.DatabaseManager o-- stars.entity.Database : db
  stars.controller.FlatFileAdminAuthenticator .up.|> stars.controller.Authenticator
  stars.controller.FlatFileStudentAuthenticator .up.|> stars.controller.StudentAuthenticator
  stars.controller.StudentController .up.|> stars.controller.UserControllerInterface
  stars.controller.StudentController o-- stars.controller.DatabaseManager : dbManager
  stars.controller.StudentController o-- stars.boundary.TimetableDisplayer : displayer
  stars.controller.StudentController o-- stars.entity.Student : myStudent

    namespace stars.entity {
    class stars.entity.Course {
        - au : int
        - courseID : String
        - courseName : String
        - indexList : ArrayList<Index>
        - school : String
        + Course()
        + addIndex()
        + getAu()
        + getCourseID()
        + getCourseName()
        + getIndexList()
        + getSchool()
        + print()
        + setAu()
        + setCourseID()
        + setCourseName()
        + setIndexList()
        + setSchool()
    }
  }


  namespace stars.entity {
    class stars.entity.Database {
        - coursesArray : ArrayList<Course>
        - studentArray : ArrayList<Student>
        + Database()
        + addCourse()
        + addStudent()
        + findStudent()
        + getCoursesArray()
        + getStudentArray()
    }
  }


  namespace stars.entity {
    class stars.entity.EmailService {
        ~ password : String
        ~ username : String
        + EmailService()
        + sendNotification()
    }
  }


  namespace stars.entity {
    class stars.entity.Index {
        - confirmedList : ArrayList<Student>
        - indexNumber : int
        - timings : ArrayList<Timing>
        - vacancy : int
        - vacancyLimit : int
        - waitList : ArrayList<Student>
        + Index()
        + addStudentToConfirmedList()
        + addStudentToWaitList()
        + addTiming()
        + dequeueStudent()
        + dropStudentFromConfirmedList()
        + dropStudentFromWaitList()
        + getAU()
        + getConfirmedList()
        + getCourse()
        + getIndexNumber()
        + getTimings()
        + getVacancy()
        + getVacancyLimit()
        + getWaitList()
        + insertStudentToWaitList()
        + print()
        + setConfirmedList()
        + setCourse()
        + setIndexNumber()
        + setTimings()
        + setVacancy()
        + setVacancyLimit()
        + setWaitList()
    }
  }


  namespace stars.entity {
    interface stars.entity.NotificationInterface {
        {abstract} + sendNotification()
    }
  }


  namespace stars.entity {
    interface stars.entity.Selectable {
        {abstract} + print()
    }
  }


  namespace stars.entity {
    class stars.entity.Student {
        - degree : String
        - email : String
        - gender : String
        - nationality : String
        - studentID : String
        - studentName : String
        + Student()
        + addIndex()
        + changeIndex()
        + checkChangeIndex()
        + dropIndex()
        + getConfirmedIndex()
        + getDegree()
        + getEmail()
        + getGender()
        + getNationality()
        + getRegisteredIndex()
        + getStudentID()
        + getStudentName()
        + getWaitlistedIndex()
        + getregisteredCourses()
        + moveToConfirmed()
        + print()
        + sendNotification()
        + swopPlaces()
    }
  }


  namespace stars.entity {
    class stars.entity.StudentRegisteredCourses {
        - AU : int
        - confirmedIndexArray : ArrayList<Index>
        - waitlistedIndexArray : ArrayList<Index>
        + StudentRegisteredCourses()
        + addAU()
        + addIndex()
        + addToConfirmedIndexArray()
        + addToWaitlistedIndexArray()
        + changeIndex()
        + dropIndex()
        + getAU()
        + getConfirmedIndexArray()
        + getIndexList()
        + getOwner()
        + getWaitlistedIndexArray()
        + moveToConfirmed()
        + removeFromConfirmedIndexArray()
        + removeFromWaitlistedIndexArray()
        + swopPlaces()
    }
  }


  namespace stars.entity {
    class stars.entity.Timing {
        - end : LocalTime
        - start : LocalTime
        + Timing()
        + checkOverlap()
        + getDay()
        + getEnd()
        + getStart()
        + getType()
        + setEnd()
        + setStart()
    }
  }


  namespace stars.entity {
    enum Day {
      FRI
      MON
      THU
      TUE
      WED
    }
  }


  namespace stars.entity {
    enum Type {
      LAB
      LEC
      TUT
    }
  }


  stars.entity.Course .up.|> java.io.Serializable
  stars.entity.Course .up.|> stars.entity.Selectable
  stars.entity.Database .up.|> java.io.Serializable
  stars.entity.EmailService .up.|> stars.entity.NotificationInterface
  stars.entity.EmailService o-- stars.entity.Student : student
  stars.entity.Index .up.|> java.io.Serializable
  stars.entity.Index .up.|> stars.entity.Selectable
  stars.entity.Index o-- stars.entity.Course : course
  stars.entity.Student .up.|> java.io.Serializable
  stars.entity.Student .up.|> stars.entity.Selectable
  stars.entity.Student o-- stars.entity.NotificationInterface : notificationService
  stars.entity.Student o-- stars.entity.StudentRegisteredCourses : registeredCourses
  stars.entity.StudentRegisteredCourses .up.|> java.io.Serializable
  stars.entity.StudentRegisteredCourses o-- stars.entity.Student : owner
  stars.entity.Timing .up.|> java.io.Serializable
  stars.entity.Timing o-- stars.entity.Timing.Day : day
  stars.entity.Timing o-- stars.entity.Timing.Type : type
  stars.entity.Timing +-down- stars.entity.Timing.Day
  stars.entity.Timing +-down- stars.entity.Timing.Type



  

  stars.boundary.AdminUI -up-|> stars.boundary.SelectUI
  stars.boundary.AdminUI o-- stars.controller.AdminController : adminController
  stars.boundary.IndexTimingDisplayer o-- stars.entity.Index : index
  stars.boundary.PrintIndexTimetableUI -up-|> stars.boundary.SelectUI
  stars.boundary.StudentUI -up-|> stars.boundary.SelectUI
  stars.boundary.StudentUI o-- stars.controller.StudentController : studentController
  stars.boundary.TimetableDisplayer o-- stars.entity.Student : student
  stars.boundary.admin.AddCourseUI -up-|> stars.boundary.SelectUI
  stars.boundary.admin.CheckVacancyUI -up-|> stars.boundary.SelectUI
  stars.boundary.admin.EditCourseInformationUI -up-|> stars.boundary.SelectUI
  stars.boundary.admin.EditStudentAccessUI -up-|> stars.boundary.SelectUI
  stars.boundary.admin.PrintStudentListByCourseUI -up-|> stars.boundary.SelectUI
  stars.boundary.admin.PrintStudentListByIndexUI -up-|> stars.boundary.SelectUI
  stars.boundary.student.AddIndexUI -up-|> stars.boundary.SelectUI
  stars.boundary.student.ChangeIndexUI -up-|> stars.boundary.SelectUI
  stars.boundary.student.CheckVacanciesAvailableUI -up-|> stars.boundary.SelectUI
  stars.boundary.student.DropIndexUI -up-|> stars.boundary.SelectUI
  stars.boundary.student.SwopIndexUI -up-|> stars.boundary.SelectUI
  stars.controller.AdminController .up.|> stars.controller.UserControllerInterface
  stars.controller.AdminController o-- stars.controller.DatabaseManager : dbManager
  stars.controller.DatabaseManager o-- stars.entity.Database : db
  stars.controller.FlatFileAdminAuthenticator .up.|> stars.controller.Authenticator
  stars.controller.FlatFileStudentAuthenticator .up.|> stars.controller.StudentAuthenticator
  stars.controller.StudentController .up.|> stars.controller.UserControllerInterface
  stars.controller.StudentController o-- stars.controller.DatabaseManager : dbManager
  stars.controller.StudentController o-- stars.boundary.TimetableDisplayer : displayer
  stars.controller.StudentController o-- stars.entity.Student : myStudent
  stars.entity.Course .up.|> java.io.Serializable
  stars.entity.Course .up.|> stars.entity.Selectable
  stars.entity.Database .up.|> java.io.Serializable
  stars.entity.EmailService .up.|> stars.entity.NotificationInterface
  stars.entity.EmailService o-- stars.entity.Student : student
  stars.entity.Index .up.|> java.io.Serializable
  stars.entity.Index .up.|> stars.entity.Selectable
  stars.entity.Index o-- stars.entity.Course : course
  stars.entity.Student .up.|> java.io.Serializable
  stars.entity.Student .up.|> stars.entity.Selectable
  stars.entity.Student o-- stars.entity.NotificationInterface : notificationService
  stars.entity.Student o-- stars.entity.StudentRegisteredCourses : registeredCourses
  stars.entity.StudentRegisteredCourses .up.|> java.io.Serializable
  stars.entity.StudentRegisteredCourses o-- stars.entity.Student : owner
  stars.entity.Timing .up.|> java.io.Serializable
  stars.entity.Timing o-- stars.entity.Timing.Day : day
  stars.entity.Timing o-- stars.entity.Timing.Type : type


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
